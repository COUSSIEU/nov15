package smallpocs.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChampEffectifAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChampEffectifAllPropertiesEquals(ChampEffectif expected, ChampEffectif actual) {
        assertChampEffectifAutoGeneratedPropertiesEquals(expected, actual);
        assertChampEffectifAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChampEffectifAllUpdatablePropertiesEquals(ChampEffectif expected, ChampEffectif actual) {
        assertChampEffectifUpdatableFieldsEquals(expected, actual);
        assertChampEffectifUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChampEffectifAutoGeneratedPropertiesEquals(ChampEffectif expected, ChampEffectif actual) {
        assertThat(expected)
            .as("Verify ChampEffectif auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChampEffectifUpdatableFieldsEquals(ChampEffectif expected, ChampEffectif actual) {
        assertThat(expected)
            .as("Verify ChampEffectif relevant properties")
            .satisfies(e -> assertThat(e.getNom()).as("check nom").isEqualTo(actual.getNom()))
            .satisfies(e -> assertThat(e.getValeur()).as("check valeur").isEqualTo(actual.getValeur()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChampEffectifUpdatableRelationshipsEquals(ChampEffectif expected, ChampEffectif actual) {
        assertThat(expected)
            .as("Verify ChampEffectif relationships")
            .satisfies(e -> assertThat(e.getEffectif()).as("check effectif").isEqualTo(actual.getEffectif()));
    }
}
